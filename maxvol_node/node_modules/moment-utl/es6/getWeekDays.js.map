{"version":3,"sources":["../src/getWeekDays.js"],"names":["moment","getWeekDays","date","startOf","toDate","days","i","push","add"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,QAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,CAAqBC,IAAI,GAAG,KAAK,CAAjC,EAAoC;AACjDA,EAAAA,IAAI,GAAGF,MAAM,CAACE,IAAD,CAAN,CAAaC,OAAb,CAAqB,MAArB,EAA6BC,MAA7B,EAAP;AACA,QAAMC,IAAI,GAAG,CAACH,IAAD,CAAb;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAC7BD,IAAAA,IAAI,CAACE,IAAL,CAAUP,MAAM,CAACE,IAAD,CAAN,CAAaM,GAAb,CAAiBF,CAAjB,EAAoB,MAApB,EAA4BF,MAA5B,EAAV;AACD;;AACD,SAAOC,IAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2021 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport moment from \"moment\";\n\n/**\n * Returns the days of the week in which a given date or today's date falls in.\n *\n * @param {Moment|Date|string|number|undefined} [date] The date to use for which to return the days of the week in which the date falls in.\n *                                                     If not given, today's date is assumed.\n * @return {Date[]} The days of the week.\n */\nexport default function getWeekDays(date = void 0) {\n  date = moment(date).startOf(\"week\").toDate();\n  const days = [date];\n  for (let i = 1; i < 7; i += 1) {\n    days.push(moment(date).add(i, \"days\").toDate());\n  }\n  return days;\n}\n"],"file":"getWeekDays.js"}