{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\lotus_prog\\\\MaxVol\\\\maxvolume_react\\\\src\\\\component\\\\Page\\\\Page.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setHoverData = e => {\n      // The chart is not updated because `chartOptions` has not changed.\n      this.setState({\n        hoverData: e.target.category\n      });\n    };\n\n    this.updateSeries = () => {\n      // The chart is updated only with new options.\n      this.setState({\n        chartOptions: {\n          series: [{\n            data: [Math.random() * 5, 2, 1]\n          }]\n        }\n      });\n    };\n\n    this.state = {\n      // To avoid unnecessary update keep all options in the state.\n      chartOptions: {\n        xAxis: {\n          categories: ['A', 'B', 'C']\n        },\n        series: [{\n          data: [1, 2, 3]\n        }],\n        plotOptions: {\n          series: {\n            point: {\n              events: {\n                mouseOver: this.setHoverData.bind(this)\n              }\n            }\n          }\n        }\n      },\n      hoverData: null\n    };\n  }\n\n  render() {\n    const {\n      chartOptions,\n      hoverData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Hovering over \", hoverData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.updateSeries.bind(this),\n        children: \"Update Series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["C:/Users/lozan/lotus_prog/MaxVol/maxvolume_react/src/component/Page/Page.js"],"names":["React","Component","render","HighchartsReact","Highcharts","LineChart","constructor","props","setHoverData","e","setState","hoverData","target","category","updateSeries","chartOptions","series","data","Math","random","state","xAxis","categories","plotOptions","point","events","mouseOver","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0BnBC,YA1BmB,GA0BHC,CAAD,IAAO;AACpB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAtB,OAAd;AACD,KA7BkB;;AAAA,SA+BnBC,YA/BmB,GA+BJ,MAAM;AACnB;AACA,WAAKJ,QAAL,CAAc;AACZK,QAAAA,YAAY,EAAE;AACZC,UAAAA,MAAM,EAAE,CACN;AAAEC,YAAAA,IAAI,EAAE,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AAAR,WADM;AADI;AADF,OAAd;AAOD,KAxCkB;;AAGjB,SAAKC,KAAL,GAAa;AACX;AACAL,MAAAA,YAAY,EAAE;AACZM,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AADP,SADK;AAIZN,QAAAA,MAAM,EAAE,CACN;AAAEC,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAR,SADM,CAJI;AAOZM,QAAAA,WAAW,EAAE;AACXP,UAAAA,MAAM,EAAE;AACNQ,YAAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,SAAS,EAAE,KAAKlB,YAAL,CAAkBmB,IAAlB,CAAuB,IAAvB;AADL;AADH;AADD;AADG;AAPD,OAFH;AAmBXhB,MAAAA,SAAS,EAAE;AAnBA,KAAb;AAqBD;;AAkBDT,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEa,MAAAA,YAAF;AAAgBJ,MAAAA;AAAhB,QAA8B,KAAKS,KAAzC;AAEA,wBACE;AAAA,8BACE,QAAC,eAAD;AACE,QAAA,UAAU,EAAEhB,UADd;AAEE,QAAA,OAAO,EAAEW;AAFX;AAAA;AAAA;AAAA;AAAA,cADF,eAKA;AAAA,qCAAmBJ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAQ,QAAA,OAAO,EAAE,KAAKG,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAxD+B;;AA0DlC,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\n\r\nclass LineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // To avoid unnecessary update keep all options in the state.\r\n      chartOptions: {\r\n        xAxis: {\r\n          categories: ['A', 'B', 'C'],\r\n        },\r\n        series: [\r\n          { data: [1, 2, 3] }\r\n        ],\r\n        plotOptions: {\r\n          series: {\r\n            point: {\r\n              events: {\r\n                mouseOver: this.setHoverData.bind(this)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      hoverData: null\r\n    };\r\n  }\r\n\r\n  setHoverData = (e) => {\r\n    // The chart is not updated because `chartOptions` has not changed.\r\n    this.setState({ hoverData: e.target.category })\r\n  }\r\n\r\n  updateSeries = () => {\r\n    // The chart is updated only with new options.\r\n    this.setState({\r\n      chartOptions: {\r\n        series: [\r\n          { data: [Math.random() * 5, 2, 1]}\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { chartOptions, hoverData } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={chartOptions}\r\n        />\r\n      <h3>Hovering over {hoverData}</h3>\r\n      <button onClick={this.updateSeries.bind(this)}>Update Series</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default LineChart\r\n"]},"metadata":{},"sourceType":"module"}