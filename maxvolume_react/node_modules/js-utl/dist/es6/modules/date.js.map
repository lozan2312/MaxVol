{"version":3,"sources":["../../../src/modules/date.js"],"names":["isValidDate","value","Object","prototype","toString","call","isNaN","getTime","isValidDateTimeStr","str","Date"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACjC,SACEC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,KAA/B,MAA0C,eAA1C,IACA,CAACK,KAAK,CAACL,KAAK,CAACM,OAAN,EAAD,CAFR;AAID;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AACtC,SAAOT,WAAW,CAAC,IAAIU,IAAJ,CAASD,GAAT,CAAD,CAAlB;AACD","sourcesContent":["/*\n * Copyright (c) 2021 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Tests if the given value is a valid date.\n *\n * @param {*} value The value to test.\n * @return {boolean} True if it is a valid date, false otherwise.\n */\nexport function isValidDate(value) {\n  return (\n    Object.prototype.toString.call(value) === \"[object Date]\" &&\n    !isNaN(value.getTime())\n  );\n}\n\n/**\n * Tests if the given string is a valid datetime string (e.g. in ISO \"YYYY-MM-DD HH:ii:ss\" format).\n *\n * @param {string} str The given string.\n * @return {boolean} True if it is a valid datetime string, false otherwise.\n */\nexport function isValidDateTimeStr(str) {\n  return isValidDate(new Date(str));\n}\n"],"file":"date.js"}